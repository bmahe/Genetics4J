<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.bmahe.genetics4j</groupId>
		<artifactId>parent</artifactId>
		<version>3.1</version>
	</parent>

	<groupId>net.bmahe.genetics4j</groupId>
	<artifactId>samples</artifactId>
	<version>3.1</version>
	<packaging>jar</packaging>

	<name>Samples</name>
	<description>Samples programs demonstrating Genetics4j capabilities</description>

	<properties>
		<exec.cleanupDaemonThreads>false</exec.cleanupDaemonThreads>
	
		<!-- Fitness Sharing Document -->
		<fitnesssharingexample.filename.csv.without_fitness_sharing>${project.build.directory}/site/docs/FitnessSharingExample_without_fitness_sharing.csv</fitnesssharingexample.filename.csv.without_fitness_sharing>
		<fitnesssharingexample.filename.csv.with_fitness_sharing>${project.build.directory}/site/docs/FitnessSharingExample_with_fitness_sharing.csv</fitnesssharingexample.filename.csv.with_fitness_sharing>
		<fitnesssharingexample.filename.png.without_fitness_sharing>${project.build.directory}/site/docs/FitnessSharingExample_without_fitness_sharing.png</fitnesssharingexample.filename.png.without_fitness_sharing>
		<fitnesssharingexample.filename.png.with_fitness_sharing>${project.build.directory}/site/docs/FitnessSharingExample_with_fitness_sharing.png</fitnesssharingexample.filename.png.with_fitness_sharing>

		<!-- Bloat Issues Document -->
		<SymbolicRegressionWithTarpeianMethod.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithTarpeianMethod.csv</SymbolicRegressionWithTarpeianMethod.filename.csv.dest>
		<SymbolicRegressionWithTarpeianMethod.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithTarpeianMethod-frontier.png</SymbolicRegressionWithTarpeianMethod.filename.frontier.png.dest>
		<SymbolicRegressionWithTarpeianMethod.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithTarpeianMethod-population_size.png</SymbolicRegressionWithTarpeianMethod.filename.population_size.png.dest>

		<SymbolicRegressionWithConstantParsimonyPressure.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithConstantParsimonyPressure.csv</SymbolicRegressionWithConstantParsimonyPressure.filename.csv.dest>
		<SymbolicRegressionWithConstantParsimonyPressure.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithConstantParsimonyPressure-frontier.png</SymbolicRegressionWithConstantParsimonyPressure.filename.frontier.png.dest>
		<SymbolicRegressionWithConstantParsimonyPressure.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithConstantParsimonyPressure-population_size.png</SymbolicRegressionWithConstantParsimonyPressure.filename.population_size.png.dest>
		
		<SymbolicRegressionWithDoubleTournament.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithDoubleTournament.csv</SymbolicRegressionWithDoubleTournament.filename.csv.dest>
		<SymbolicRegressionWithDoubleTournament.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithDoubleTournament-frontier.png</SymbolicRegressionWithDoubleTournament.filename.frontier.png.dest>
		<SymbolicRegressionWithDoubleTournament.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithDoubleTournament-population_size.png</SymbolicRegressionWithDoubleTournament.filename.population_size.png.dest>

		<SymbolicRegressionWithProportionalTournament.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithProportionalTournament.csv</SymbolicRegressionWithProportionalTournament.filename.csv.dest>
		<SymbolicRegressionWithProportionalTournament.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithProportionalTournament-frontier.png</SymbolicRegressionWithProportionalTournament.filename.frontier.png.dest>
		<SymbolicRegressionWithProportionalTournament.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithProportionalTournament-population_size.png</SymbolicRegressionWithProportionalTournament.filename.population_size.png.dest>

		<SymbolicRegressionWithMOONSGA2.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOONSGA2.csv</SymbolicRegressionWithMOONSGA2.filename.csv.dest>
		<SymbolicRegressionWithMOONSGA2.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOONSGA2-frontier.png</SymbolicRegressionWithMOONSGA2.filename.frontier.png.dest>
		<SymbolicRegressionWithMOONSGA2.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOONSGA2-population_size.png</SymbolicRegressionWithMOONSGA2.filename.population_size.png.dest>

		<SymbolicRegressionWithMOOSPEA2.filename.csv.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOOSPEA2.csv</SymbolicRegressionWithMOOSPEA2.filename.csv.dest>
		<SymbolicRegressionWithMOOSPEA2.filename.frontier.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOOSPEA2-frontier.png</SymbolicRegressionWithMOOSPEA2.filename.frontier.png.dest>
		<SymbolicRegressionWithMOOSPEA2.filename.population_size.png.dest>${project.build.directory}/site/docs/bloat_issues_SymbolicRegressionWithMOOSPEA2-population_size.png</SymbolicRegressionWithMOOSPEA2.filename.population_size.png.dest>

		<Clustering.source.clusters>${project.build.outputDirectory}/clustering-centroids.csv</Clustering.source.clusters>
		<Clustering.source.data>${project.build.outputDirectory}/clustering-data.csv</Clustering.source.data>
		<Clustering.output.ga>${project.build.directory}/site/docs/clustering_output_ga.csv</Clustering.output.ga>
		<Clustering.output.ga.with_sse>${project.build.directory}/site/docs/clustering_output_ga_with_sse.csv</Clustering.output.ga.with_sse>
		<Clustering.fitness.plot.output.png.dest>${project.build.directory}/site/docs/clustering_fitness_plot.png</Clustering.fitness.plot.output.png.dest>
		<Clustering.fitness_with_sse.plot.output.png.dest>${project.build.directory}/site/docs/clustering_fitness_with_sse_plot.png</Clustering.fitness_with_sse.plot.output.png.dest>

		<mixturemodel.data.original.csv>${project.build.outputDirectory}/mixturemodel/original.csv.gz</mixturemodel.data.original.csv>
		<mixturemodel.data.original.png.dest>${project.build.directory}/site/docs/mixturemodel/original.png</mixturemodel.data.original.png.dest>
		<mixturemodel.data.commons-math.csv>${project.build.outputDirectory}/mixturemodel/assigned-commons-math.csv.gz</mixturemodel.data.commons-math.csv>
		<mixturemodel.data.commons-math.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-commons-math.png</mixturemodel.data.commons-math.png.dest>
		<mixturemodel.data.so-5.csv>${project.build.outputDirectory}/mixturemodel/assigned-so-5.csv.gz</mixturemodel.data.so-5.csv>
		<mixturemodel.data.so-5.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-so-5.png</mixturemodel.data.so-5.png.dest>
		<mixturemodel.data.fitness.so-cpu.csv>${project.build.outputDirectory}/mixturemodel/mixturemodel-so-cpu.csv.gz</mixturemodel.data.fitness.so-cpu.csv>
		<mixturemodel.data.fitness.moo-cpu.csv>${project.build.outputDirectory}/mixturemodel/mixturemodel-moo-cpu.csv.gz</mixturemodel.data.fitness.moo-cpu.csv>
		<mixturemodel.data.fitness.moo-gpu.csv>${project.build.outputDirectory}/mixturemodel/mixturemodel-moo-gpu.csv.gz</mixturemodel.data.fitness.moo-gpu.csv>
		<mixturemodel.data.fitness.moo-gpu-with-seed.csv>${project.build.outputDirectory}/mixturemodel/mixturemodel-moo-gpu-seed.csv.gz</mixturemodel.data.fitness.moo-gpu-with-seed.csv>
		<mixturemodel.data.fitness.so-cpu.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-so-cpu.png</mixturemodel.data.fitness.so-cpu.dest>
		<mixturemodel.data.fitness.moo-cpu.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-cpu.png</mixturemodel.data.fitness.moo-cpu.dest>
		<mixturemodel.data.fitness.moo-gpu.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-gpu.png</mixturemodel.data.fitness.moo-gpu.dest>
		<mixturemodel.data.fitness.moo-gpu-with-seed.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-gpu-seed.png</mixturemodel.data.fitness.moo-gpu-with-seed.dest>
		<mixturemodel.data.fitness.commons-math.csv>${project.build.outputDirectory}/mixturemodel/commons-math.csv.gz</mixturemodel.data.fitness.commons-math.csv>
		<mixturemodel.data.fitness.so-cpu-s100.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-so-cpu-s100.png</mixturemodel.data.fitness.so-cpu-s100.dest>
		<mixturemodel.data.fitness.moo-cpu-s100.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-cpu-s100.png</mixturemodel.data.fitness.moo-cpu-s100.dest>
		<mixturemodel.data.fitness.moo-gpu-s100.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-gpu-s100.png</mixturemodel.data.fitness.moo-gpu-s100.dest>
		<mixturemodel.data.fitness.moo-gpu-with-seed-s100.dest>${project.build.directory}/site/docs/mixturemodel/mixturemodel-moo-gpu-seed-s100.png</mixturemodel.data.fitness.moo-gpu-with-seed-s100.dest>

		<mixturemodel.data.moo.cpu.1.csv>${project.build.outputDirectory}/mixturemodel/assigned-moo-cpu-1.csv.gz</mixturemodel.data.moo.cpu.1.csv>
		<mixturemodel.data.moo.cpu.1.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-moo-cpu-1.png</mixturemodel.data.moo.cpu.1.png.dest>
		<mixturemodel.data.moo.cpu.2.csv>${project.build.outputDirectory}/mixturemodel/assigned-moo-cpu-2.csv.gz</mixturemodel.data.moo.cpu.2.csv>
		<mixturemodel.data.moo.cpu.2.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-moo-cpu-2.png</mixturemodel.data.moo.cpu.2.png.dest>
		<mixturemodel.data.moo.cpu.3.csv>${project.build.outputDirectory}/mixturemodel/assigned-moo-cpu-3.csv.gz</mixturemodel.data.moo.cpu.3.csv>
		<mixturemodel.data.moo.cpu.3.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-moo-cpu-3.png</mixturemodel.data.moo.cpu.3.png.dest>
		<mixturemodel.data.moo.cpu.4.csv>${project.build.outputDirectory}/mixturemodel/assigned-moo-cpu-4.csv.gz</mixturemodel.data.moo.cpu.4.csv>
		<mixturemodel.data.moo.cpu.4.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-moo-cpu-4.png</mixturemodel.data.moo.cpu.4.png.dest>
		<mixturemodel.data.moo.cpu.5.csv>${project.build.outputDirectory}/mixturemodel/assigned-moo-cpu-5.csv.gz</mixturemodel.data.moo.cpu.5.csv>
		<mixturemodel.data.moo.cpu.5.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-moo-cpu-5.png</mixturemodel.data.moo.cpu.5.png.dest>

		<mixturemodel.data.moo.gpu.1.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-1.csv.gz</mixturemodel.data.moo.gpu.1.csv>
		<mixturemodel.data.moo.gpu.1.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-1.png</mixturemodel.data.moo.gpu.1.png.dest>
		<mixturemodel.data.moo.gpu.2.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-2.csv.gz</mixturemodel.data.moo.gpu.2.csv>
		<mixturemodel.data.moo.gpu.2.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-2.png</mixturemodel.data.moo.gpu.2.png.dest>
		<mixturemodel.data.moo.gpu.3.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-3.csv.gz</mixturemodel.data.moo.gpu.3.csv>
		<mixturemodel.data.moo.gpu.3.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-3.png</mixturemodel.data.moo.gpu.3.png.dest>
		<mixturemodel.data.moo.gpu.4.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-4.csv.gz</mixturemodel.data.moo.gpu.4.csv>
		<mixturemodel.data.moo.gpu.4.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-4.png</mixturemodel.data.moo.gpu.4.png.dest>
		<mixturemodel.data.moo.gpu.5.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-5.csv.gz</mixturemodel.data.moo.gpu.5.csv>
		<mixturemodel.data.moo.gpu.5.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-5.png</mixturemodel.data.moo.gpu.5.png.dest>

		<mixturemodel.data.moo.gpu-seed.1.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-seed-1.csv.gz</mixturemodel.data.moo.gpu-seed.1.csv>
		<mixturemodel.data.moo.gpu-seed.1.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-seed-1.png</mixturemodel.data.moo.gpu-seed.1.png.dest>
		<mixturemodel.data.moo.gpu-seed.3.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-seed-3.csv.gz</mixturemodel.data.moo.gpu-seed.3.csv>
		<mixturemodel.data.moo.gpu-seed.3.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-seed-3.png</mixturemodel.data.moo.gpu-seed.3.png.dest>
		<mixturemodel.data.moo.gpu-seed.4.csv>${project.build.outputDirectory}/mixturemodel/assigned-mixturemodel-moo-gpu-seed-4.csv.gz</mixturemodel.data.moo.gpu-seed.4.csv>
		<mixturemodel.data.moo.gpu-seed.4.png.dest>${project.build.directory}/site/docs/mixturemodel/assigned-mixturemodel-moo-gpu-seed-4.png</mixturemodel.data.moo.gpu-seed.4.png.dest>

		<neat.xor.csv.filename>${project.build.directory}/site/docs/neat/xor.csv</neat.xor.csv.filename>
		<neat.xor.best_network.dot>${project.build.directory}/site/docs/neat/xor.dot</neat.xor.best_network.dot>
		<neat.xor.fitness.png>${project.build.directory}/site/docs/neat/fitness.png</neat.xor.fitness.png>
		<neat.xor.num_nodes.png>${project.build.directory}/site/docs/neat/num_nodes.png</neat.xor.num_nodes.png>
		<neat.xor.num_connections.png>${project.build.directory}/site/docs/neat/num_connections.png</neat.xor.num_connections.png>
		<neat.xor.num_connections_enabled.png>${project.build.directory}/site/docs/neat/num_connections_enabled.png</neat.xor.num_connections_enabled.png>
		<neat.xor.num_connections_disabled.png>${project.build.directory}/site/docs/neat/num_connections_disabled.png</neat.xor.num_connections_disabled.png>
</properties>

	<dependencies>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>core</artifactId>
		</dependency>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>gp</artifactId>
		</dependency>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>gpu</artifactId>
		</dependency>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>moo</artifactId>
		</dependency>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>extras</artifactId>
		</dependency>

		<dependency>
			<groupId>net.bmahe.genetics4j</groupId>
			<artifactId>neat</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.immutables</groupId>
			<artifactId>value</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>


		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>gz</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${maven.exec.plugin.version}</version>
				<executions>

					<!-- Fitness Sharing Document -->
					<execution>
						<id>example-FitnessSharingExample-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.FitnessSharingExample</mainClass>
							<arguments>
								<argument>--without-sharing-dest=${fitnesssharingexample.filename.csv.without_fitness_sharing}</argument>
								<argument>--with-sharing-dest=${fitnesssharingexample.filename.csv.with_fitness_sharing}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-FitnessSharingExample-without-fitness-sharing-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${fitnesssharingexample.filename.csv.without_fitness_sharing}'" -e "plot_title='Without Fitness Sharing'" -e "output_filename='${fitnesssharingexample.filename.png.without_fitness_sharing}'" ${project.build.outputDirectory}/fitness_sharing.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-FitnessSharingExample-with-fitness-sharing-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${fitnesssharingexample.filename.csv.with_fitness_sharing}'" -e "plot_title='With Fitness Sharing'" -e "output_filename='${fitnesssharingexample.filename.png.with_fitness_sharing}'" ${project.build.outputDirectory}/fitness_sharing.gnuplot</commandlineArgs>
						</configuration>
					</execution>


					<!-- Bloat Issues Document -->
					<!-- Tarpeian Method -->
					<execution>
						<id>example-SymbolicRegressionWithTarpeianMethod-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithTarpeianMethod</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithTarpeianMethod.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithTarpeianMethod-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithTarpeianMethod.filename.csv.dest}'" -e "plot_title='Best Individuals over time - Tarpeian Method'" -e "output_filename='${SymbolicRegressionWithTarpeianMethod.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithTarpeianMethod-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithTarpeianMethod.filename.csv.dest}'" -e "plot_title='Population Size over time - Tarpeian Method'" -e "output_filename='${SymbolicRegressionWithTarpeianMethod.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>

					<!-- Constant Parsimony Pressure -->
					<execution>
						<id>example-SymbolicRegressionWithConstantParsimonyPressure-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithConstantParsimonyPressure</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithConstantParsimonyPressure.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithConstantParsimonyPressure-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithConstantParsimonyPressure.filename.csv.dest}'" -e "plot_title='Best Individuals over time - Constant Parsimony Pressure'" -e "output_filename='${SymbolicRegressionWithConstantParsimonyPressure.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithConstantParsimonyPressure-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithConstantParsimonyPressure.filename.csv.dest}'" -e "plot_title='Population Size over time - Constant Parsimony Pressure'" -e "output_filename='${SymbolicRegressionWithConstantParsimonyPressure.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>

					<!-- Double Tournament -->
					<execution>
						<id>example-SymbolicRegressionWithDoubleTournament-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithDoubleTournament</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithDoubleTournament.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithDoubleTournament-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithDoubleTournament.filename.csv.dest}'" -e "plot_title='Best Individuals over time - Double Tournament'" -e "output_filename='${SymbolicRegressionWithDoubleTournament.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithDoubleTournament-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithDoubleTournament.filename.csv.dest}'" -e "plot_title='Population Size over time - Double Tournament'" -e "output_filename='${SymbolicRegressionWithDoubleTournament.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>


					<!-- Proportional Tournament -->
					<execution>
						<id>example-SymbolicRegressionWithProportionalTournament-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithProportionalTournament</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithProportionalTournament.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithProportionalTournament-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithProportionalTournament.filename.csv.dest}'" -e "plot_title='Best Individuals over time - Proportional Tournament'" -e "output_filename='${SymbolicRegressionWithProportionalTournament.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithProportionalTournament-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithProportionalTournament.filename.csv.dest}'" -e "plot_title='Population Size over time - Proportional Tournament'" -e "output_filename='${SymbolicRegressionWithProportionalTournament.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					
					<!-- MOO - NSGA2 -->
					<execution>
						<id>example-SymbolicRegressionWithMOONSGA2-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithMOO</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithMOONSGA2.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithMOONSGA2-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithMOONSGA2.filename.csv.dest}'" -e "plot_title='Best Individuals over time - MOO NSGA2'" -e "output_filename='${SymbolicRegressionWithMOONSGA2.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithMOONSGA2-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithMOONSGA2.filename.csv.dest}'" -e "plot_title='Population Size over time - MOO NSGA2'" -e "output_filename='${SymbolicRegressionWithMOONSGA2.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					
					<!-- MOO - SPEA2 -->
					<execution>
						<id>example-SymbolicRegressionWithMOOSPEA2-process</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.symbolicregression.SymbolicRegressionWithMOOSPEA2</mainClass>
							<arguments>
								<argument>--csv-dest=${SymbolicRegressionWithMOOSPEA2.filename.csv.dest}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithMOOSPEA2-frontier-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithMOOSPEA2.filename.csv.dest}'" -e "plot_title='Best Individuals over time - MOO SPEA2'" -e "output_filename='${SymbolicRegressionWithMOOSPEA2.filename.frontier.png.dest}'" ${project.build.outputDirectory}/bloat_issue_frontier.gnuplot</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-SymbolicRegressionWithMOOSPEA2-size-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>gnuplot</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e "filename='${SymbolicRegressionWithMOOSPEA2.filename.csv.dest}'" -e "plot_title='Population Size over time - MOO SPEA2'" -e "output_filename='${SymbolicRegressionWithMOOSPEA2.filename.population_size.png.dest}'" ${project.build.outputDirectory}/bloat_issue_population_size.gnuplot</commandlineArgs>
						</configuration>
					</execution>

					<!-- Clustering -->
					<execution>
						<id>example-Clustering</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.clustering.Clustering</mainClass>
							<arguments>
								<argument>--source-clusters=${Clustering.source.clusters}</argument>
								<argument>--source-data=${Clustering.source.data}</argument>
								<argument>--output=${Clustering.output.ga}</argument>
								<argument>--output-sse=${Clustering.output.ga.with_sse}</argument>
								<argument>--base-dir=${project.build.directory}/site/docs/</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace="${Clustering.output.ga}" --destination="${Clustering.fitness.plot.output.png.dest}"</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-fitness-with-sse-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace="${Clustering.output.ga.with_sse}" --destination="${Clustering.fitness_with_sse.plot.output.png.dest}"</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-ga-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${project.build.directory}/site/docs/clustering-result-ga.csv --result_clustering=${project.build.directory}/site/docs/clustering-result-clusters-ga.csv  --destination=${project.build.directory}/site/docs/clustering-result-ga.png --min_x=-150 --max_x=150 --min_y=-150 --max_y=150 </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-ga-with-sse-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${project.build.directory}/site/docs/clustering-result-ga-with-sse.csv --result_clustering=${project.build.directory}/site/docs/clustering-result-clusters-ga-with-sse.csv  --destination=${project.build.directory}/site/docs/clustering-result-ga-with-sse.png --min_x=-150 --max_x=150 --min_y=-150 --max_y=150 </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-kmeans-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${project.build.directory}/site/docs/clustering-result-kmeans.csv --result_clustering=${project.build.directory}/site/docs/clustering-result-clusters-kmeans.csv  --destination=${project.build.directory}/site/docs/clustering-result-kmeans.png --min_x=-150 --max_x=150 --min_y=-150 --max_y=150 </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-Clustering-original-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${project.build.directory}/site/docs/clustering-result-original.csv --result_clustering=${project.build.directory}/site/docs/clustering-result-clusters-original.csv  --destination=${project.build.directory}/site/docs/clustering-result-original.png --min_x=-150 --max_x=150 --min_y=-150 --max_y=150 </commandlineArgs>
						</configuration>
					</execution>

					<!-- Mixture model-->
					<execution>
						<id>example-MixtureModel-original-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.original.csv} --destination=${mixturemodel.data.original.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-commons-math-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.commons-math.csv} --destination=${mixturemodel.data.commons-math.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-so-5-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.so-5.csv} --destination=${mixturemodel.data.so-5.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-so-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.so-cpu.csv} --name "Single Objective Method" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.so-cpu.dest}  --quantile=0.99</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-so-s100-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.so-cpu.csv} --name "Single Objective Method" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.so-cpu-s100.dest}  --quantile=0.99 --start_index=100</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-1-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.cpu.1.csv} --destination=${mixturemodel.data.moo.cpu.1.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-2-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.cpu.2.csv} --destination=${mixturemodel.data.moo.cpu.2.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-3-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.cpu.3.csv} --destination=${mixturemodel.data.moo.cpu.3.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-4-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.cpu.4.csv} --destination=${mixturemodel.data.moo.cpu.4.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-5-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.cpu.5.csv} --destination=${mixturemodel.data.moo.cpu.5.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-cpu-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-cpu.csv} --name "Multi Objective Optimization - CPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-cpu.dest}  --quantile=0.99</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-s100-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-cpu.csv} --name "Multi Objective Optimization - CPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-cpu-s100.dest}  --quantile=0.99 --start_index=100</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-1-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu.1.csv} --destination=${mixturemodel.data.moo.gpu.1.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-2-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu.2.csv} --destination=${mixturemodel.data.moo.gpu.2.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-3-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu.3.csv} --destination=${mixturemodel.data.moo.gpu.3.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-4-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu.4.csv} --destination=${mixturemodel.data.moo.gpu.4.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-5-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu.5.csv} --destination=${mixturemodel.data.moo.gpu.5.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-gpu.csv} --name "Multi Objective Optimization - GPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-gpu.dest}  --quantile=0.99</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-s100-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-gpu.csv} --name "Multi Objective Optimization - GPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-gpu-s100.dest}  --quantile=0.99 --start_index=200</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-seed-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-gpu-with-seed.csv} --name "Multi Objective Optimization with seed - GPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-gpu-with-seed.dest}  --quantile=0.99</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-seed-s100-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_multi_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>-e ${mixturemodel.data.fitness.moo-gpu-with-seed.csv} --name "Multi Objective Optimization with seed - GPU" -e ${mixturemodel.data.fitness.commons-math.csv} --name "Apache Commons Math"  -d ${mixturemodel.data.fitness.moo-gpu-with-seed-s100.dest}  --quantile=0.99 --start_index=5</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-seed-1-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu-seed.1.csv} --destination=${mixturemodel.data.moo.gpu-seed.1.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-seed-3-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu-seed.3.csv} --destination=${mixturemodel.data.moo.gpu-seed.3.png.dest} </commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-MixtureModel-moo-gpu-seed-4-data-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_clustering.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--result_membership=${mixturemodel.data.moo.gpu-seed.4.csv} --destination=${mixturemodel.data.moo.gpu-seed.4.png.dest} </commandlineArgs>
						</configuration>
					</execution>

					<!-- NEAT -->
					<execution>
						<id>example-neat-xor</id>
						<goals>
							<goal>java</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<mainClass>net.bmahe.genetics4j.samples.neat.Main</mainClass>
							<arguments>
								<argument>--save=${neat.xor.best_network.dot}</argument>
								<argument>--csv-dest=${neat.xor.csv.filename}</argument>
							</arguments>
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
						</configuration>
					</execution>
					<execution>
						<id>example-neat-xor-fitness-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace=${neat.xor.csv.filename} --destination=${neat.xor.fitness.png}</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-neat-xor-num_nodes-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace=${neat.xor.csv.filename} --destination=${neat.xor.num_nodes.png} -l individual_num_nodes -t 'Number of nodes'</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-neat-xor-num_connections-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace="${neat.xor.csv.filename}" --destination="${neat.xor.num_connections.png}" -l "individual_num_connections" -t "Number of connections"</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-neat-xor-num_connections-enabled-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace="${neat.xor.csv.filename}" --destination="${neat.xor.num_connections_enabled.png}" -l "individual_num_connections_enabled" -t "Number of enabled connections"</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>example-neat-xor-num_connections-disabled-plot</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-site</phase>
						<configuration>
							<executable>${project.basedir}/scripts/plot_fitness.py</executable>
							<!-- arguments doesn't work. commandlineArgs works somehow -->
							<commandlineArgs>--execution_trace="${neat.xor.csv.filename}" --destination="${neat.xor.num_connections_disabled.png}" -l "individual_num_connections_disabled" -t "Number of disabled connections"</commandlineArgs>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
		</plugins>
	</reporting>
</project>